:orphan:

.. INDEX

:py:mod:`nlptest.transform.utils`
=================================

.. py:module:: nlptest.transform.utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   nlptest.transform.utils.get_substitution_names
   nlptest.transform.utils.create_terminology
   nlptest.transform.utils.get_label_representation_dict
   nlptest.transform.utils.get_country_economic_representation_dict
   nlptest.transform.utils.get_religion_name_representation_dict
   nlptest.transform.utils.get_ethnicity_representation_dict
   nlptest.transform.utils.get_entity_representation_proportions



.. py:function:: get_substitution_names(values_list)

   Helper function to get list of substitution names 

   Args:
        values_list : list of substitution lists.

   Returns:
        List of substitution names


.. py:function:: create_terminology(ner_data: pandas.DataFrame) -> Dict[str, List[str]]

   Iterate over the DataFrame to create terminology from the predictions. IOB format converted to the IO.

   Args:
       ner_data: Pandas DataFrame that has 2 column, 'text' as string and 'label' as list of labels

   Returns:
       Dictionary of entities and corresponding list of words.


.. py:function:: get_label_representation_dict(data)

   Args:
       data (List[Sample]): The input data to be evaluated for representation test.

   Returns:
       dict: a dictionary containing label representation information.


.. py:function:: get_country_economic_representation_dict(data)

   Args:
      data (List[Sample]): The input data to be evaluated for representation test.

   Returns:
      dict: a dictionary containing country economic representation information.


.. py:function:: get_religion_name_representation_dict(data)

   Args:
       data (List[Sample]): The input data to be evaluated for representation test.

   Returns:
       dict: a dictionary containing religion representation information.


.. py:function:: get_ethnicity_representation_dict(data)

   Args:
       data (List[Sample]): The input data to be evaluated for representation test.

   Returns:
       dict: a dictionary containing ethnicity representation information.


.. py:function:: get_entity_representation_proportions(entity_representation)

   Args:
      entity_representation (dict): a dictionary containing representation information.

   Returns:
      dict: a dictionary with proportions of each entity.



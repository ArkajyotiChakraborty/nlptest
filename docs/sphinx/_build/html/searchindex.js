Search.setIndex({"docnames": ["_templates/_autoapi/base/base", "_templates/_autoapi/index", "_templates/_autoapi/python/attribute", "_templates/_autoapi/python/class", "_templates/_autoapi/python/data", "_templates/_autoapi/python/exception", "_templates/_autoapi/python/function", "_templates/_autoapi/python/method", "_templates/_autoapi/python/module", "_templates/_autoapi/python/package", "getting_started/index", "index", "reference/_autosummary/nlptest/augmentation/fix_robustness/index", "reference/_autosummary/nlptest/augmentation/index", "reference/_autosummary/nlptest/datahandler/datasource/index", "reference/_autosummary/nlptest/datahandler/format/index", "reference/_autosummary/nlptest/datahandler/index", "reference/_autosummary/nlptest/index", "reference/_autosummary/nlptest/modelhandler/index", "reference/_autosummary/nlptest/modelhandler/jsl_modelhandler/index", "reference/_autosummary/nlptest/modelhandler/modelhandler/index", "reference/_autosummary/nlptest/modelhandler/spacy_modelhandler/index", "reference/_autosummary/nlptest/modelhandler/transformers_modelhandler/index", "reference/_autosummary/nlptest/nlptest/index", "reference/_autosummary/nlptest/testrunner/index", "reference/_autosummary/nlptest/transform/accuracy/index", "reference/_autosummary/nlptest/transform/bias/index", "reference/_autosummary/nlptest/transform/index", "reference/_autosummary/nlptest/transform/perturbation/index", "reference/_autosummary/nlptest/transform/representation/index", "reference/_autosummary/nlptest/transform/robustness/index", "reference/_autosummary/nlptest/transform/utils/index", "reference/_autosummary/nlptest/utils/custom_types/index", "reference/_autosummary/nlptest/utils/index", "reference/_autosummary/nlptest/utils/lib_manager/index", "reference/index", "user_guide/index"], "filenames": ["_templates/_autoapi/base/base.rst", "_templates/_autoapi/index.rst", "_templates/_autoapi/python/attribute.rst", "_templates/_autoapi/python/class.rst", "_templates/_autoapi/python/data.rst", "_templates/_autoapi/python/exception.rst", "_templates/_autoapi/python/function.rst", "_templates/_autoapi/python/method.rst", "_templates/_autoapi/python/module.rst", "_templates/_autoapi/python/package.rst", "getting_started/index.rst", "index.rst", "reference/_autosummary/nlptest/augmentation/fix_robustness/index.rst", "reference/_autosummary/nlptest/augmentation/index.rst", "reference/_autosummary/nlptest/datahandler/datasource/index.rst", "reference/_autosummary/nlptest/datahandler/format/index.rst", "reference/_autosummary/nlptest/datahandler/index.rst", "reference/_autosummary/nlptest/index.rst", "reference/_autosummary/nlptest/modelhandler/index.rst", "reference/_autosummary/nlptest/modelhandler/jsl_modelhandler/index.rst", "reference/_autosummary/nlptest/modelhandler/modelhandler/index.rst", "reference/_autosummary/nlptest/modelhandler/spacy_modelhandler/index.rst", "reference/_autosummary/nlptest/modelhandler/transformers_modelhandler/index.rst", "reference/_autosummary/nlptest/nlptest/index.rst", "reference/_autosummary/nlptest/testrunner/index.rst", "reference/_autosummary/nlptest/transform/accuracy/index.rst", "reference/_autosummary/nlptest/transform/bias/index.rst", "reference/_autosummary/nlptest/transform/index.rst", "reference/_autosummary/nlptest/transform/perturbation/index.rst", "reference/_autosummary/nlptest/transform/representation/index.rst", "reference/_autosummary/nlptest/transform/robustness/index.rst", "reference/_autosummary/nlptest/transform/utils/index.rst", "reference/_autosummary/nlptest/utils/custom_types/index.rst", "reference/_autosummary/nlptest/utils/index.rst", "reference/_autosummary/nlptest/utils/lib_manager/index.rst", "reference/index.rst", "user_guide/index.rst"], "titles": ["&lt;no title&gt;", "API Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Quick Start", "Welcome to the docs page for NLP Test!", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.augmentation.fix_robustness</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.datahandler.datasource</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.datahandler.format</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.datahandler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.modelhandler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.modelhandler.jsl_modelhandler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.modelhandler.modelhandler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.modelhandler.spacy_modelhandler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.modelhandler.transformers_modelhandler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.nlptest</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.testrunner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.transform.accuracy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.transform.bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.transform.perturbation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.transform.representation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.transform.robustness</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.transform.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.utils.custom_types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nlptest.utils.lib_manager</span></code>", "API Reference", "User Guide"], "terms": {"index": [8, 28, 30], "modul": [1, 8, 9, 11], "search": [], "page": [1, 35], "thi": [1, 12, 15, 19, 23, 32, 35, 36], "can": [10, 12, 36], "quick": 11, "refer": [10, 11, 36], "how": [10, 12], "set": [3, 8], "up": 10, "your": 10, "environ": 10, "let": [], "": [], "creat": [10, 14, 25, 27, 28, 31, 32], "new": [10, 12, 23, 28, 30, 32], "manag": 10, "all": [1, 8, 10, 19, 21, 23, 24, 27, 35], "depend": 10, "Then": 10, "we": 10, "nlptest": 10, "packag": [8, 10], "pip": 10, "now": 10, "you": 10, "should": [10, 12, 15, 19], "readi": 10, "jupyt": 10, "notebook": 10, "run": [10, 23, 24, 27], "also": 10, "python": [2, 5, 9, 10], "spark": 10, "from": [10, 12, 14, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32], "pypi": 10, "releas": 10, "n": 10, "3": [3, 4, 6, 7, 8, 10], "8": [4, 10], "y": 10, "activ": 10, "c": 10, "python3": 10, "sourc": 10, "bin": 10, "get": [10, 27, 31], "start": [11, 28, 30], "nlp": [1, 19, 23, 35, 36], "test": [1, 12, 23, 24, 25, 27, 32, 35, 36], "cheat": [], "sheet": [], "instal": [], "The": [10, 12, 14, 15, 23, 25, 26, 27, 29, 30, 32, 36], "follow": [10, 12], "us": [10, 15, 20, 23, 28, 30, 32], "import": [8, 10, 36], "har": [10, 12, 23], "object": [3, 10, 14, 15, 23, 27, 32], "h": 10, "ner": [10, 19, 21, 22, 32], "model": [10, 19, 20, 21, 22, 23, 24, 25, 27, 32], "dslim": 10, "bert": 10, "base": [3, 10, 12, 14, 15, 19, 24, 25, 26, 27, 29, 30], "hub": [10, 19, 20, 23], "transform": [10, 22, 32], "gener": [10, 23], "report": [10, 12, 23], "case": [10, 23], "virtualenv": 10, "conda": 10, "user": 11, "guid": 11, "i": [4, 6, 7, 8, 12, 14, 15, 19, 23, 28, 30, 32, 36], "an": [1, 12, 23, 25, 26, 27, 28, 29, 30, 35, 36], "overview": [1, 35, 36], "explain": 36, "featur": 36, "depth": 36, "document": [15, 36], "found": [28, 30, 36], "titl": 8, "For": 36, "more": 36, "explan": 36, "pleas": 36, "check": [19, 26, 28, 36], "websit": 36, "http": [], "org": [], "list": [1, 3, 8, 12, 14, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35], "class": [1, 3, 5, 8, 35], "function": [1, 6, 8, 35], "method": [1, 3, 7, 12, 15, 19, 23, 24, 25, 26, 28, 29, 30, 35], "extend": [2, 5, 9], "data": [2, 8, 12, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32], "rst": [2, 5, 8, 9], "obj": [3, 4, 6, 7, 8], "displai": [3, 4, 6, 7, 8], "py": [3, 4, 6, 7, 32], "type": [3, 4, 8, 12, 14, 15, 23, 26, 27, 28, 32], "short_nam": [3, 6, 7, 8], "arg": [3, 6, 7, 12, 15, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31], "endif": [3, 4, 6, 7, 8], "return_annot": [3, 6, 7], "overload": [3, 6, 7, 32], "length": [3, 7, 8], "endfor": [3, 6, 7, 8], "show": [3, 4, 8], "inherit": [3, 19, 28], "autoapi_opt": [3, 8], "link_obj": 3, "loop": 3, "last": 3, "diagram": 3, "autoapi": [3, 8], "full_nam": 3, "part": 3, "1": [3, 4, 6, 7, 8], "privat": 3, "member": 3, "docstr": [3, 4, 6, 7, 8], "indent": [3, 4, 6, 7, 8], "visible_class": [3, 8], "selectattr": [3, 8], "els": [3, 4, 6, 7, 8, 28, 30], "rejectattr": [3, 8], "klass": [3, 8], "render": [3, 8], "visible_attribut": [3, 8], "attribut": [3, 8, 12, 19, 22, 23, 25, 26, 29, 30], "visible_method": 3, "name": [4, 8, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31], "valu": [4, 25, 27], "none": [4, 6, 7, 8, 12, 15, 22, 23, 27, 28, 30, 32], "annot": 4, "string": [4, 12, 15, 21, 22, 26, 28, 30, 31, 32], "splitlin": 4, "count": 4, "multilin": 4, "width": 4, "truncat": 4, "100": 4, "sphinx_vers": [6, 7], "2": [6, 7, 8, 31], "properti": [6, 7, 32], "method_typ": 7, "nest": 8, "pars": 8, "block": 8, "subpackag": 8, "visible_subpackag": 8, "toctre": 8, "titlesonli": 8, "maxdepth": 8, "endblock": 8, "submodul": 8, "visible_submodul": 8, "content": 8, "visible_children": 8, "children": 8, "elif": 8, "equalto": 8, "visible_funct": 8, "summari": 8, "scope": 8, "id": [8, 15], "obj_item": 8, "0": [8, 12], "api": [11, 36], "baseaugmentaion": 12, "abstract": [12, 15, 19, 24, 25, 26, 27, 29, 30], "techniqu": 12, "fix": 12, "implement": [12, 15, 19, 25, 26, 29, 30], "child": 12, "perform": [12, 15, 19, 20, 21, 22, 23, 27], "oper": [12, 32], "return": [12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32], "notimplementederror": [12, 15], "rais": [12, 15, 23], "augmentrobust": [12, 23], "task": [12, 14, 20, 23, 32], "h_report": 12, "config": [12, 23, 25, 28, 30], "max_prop": 12, "5": 12, "A": [12, 15, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30], "specifi": [12, 15, 27], "histor": 12, "result": [12, 15, 23, 24, 25, 27, 32], "str": [12, 14, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32], "indic": 12, "being": 12, "dict": [12, 23, 27, 28, 30, 31, 32], "dictionari": [12, 23, 27, 28, 30, 31], "contain": [12, 15, 23, 24], "configur": [12, 23], "paramet": 12, "panda": [12, 23, 24, 31], "datafram": [12, 23, 24, 31], "float": 12, "maximum": 12, "proport": 12, "improv": 12, "suggest": 12, "default": [12, 23], "__init__": 12, "self": [12, 29], "initi": 12, "instanc": [12, 14, 19, 23], "myclass": 12, "sampl": [12, 14, 15, 24, 25, 26, 27, 28, 29, 30, 32], "prop": 12, "calcul": 12, "given": [12, 23, 25, 27], "input_path": [12, 23], "output_path": [12, 23], "inplac": [12, 23], "bool": [12, 19, 21, 22, 23], "fals": [12, 19, 21, 22, 23], "appli": [12, 26, 28, 30, 32], "perturb": [12, 26, 30, 32], "input": [12, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30], "recommend": 12, "path": [12, 19, 20, 21, 22, 23], "file": [12, 14, 23], "save": [12, 23], "option": [12, 15, 19, 21, 22, 23, 32], "If": [12, 15, 23, 32], "true": [12, 25], "modifi": [12, 23], "place": 12, "otherwis": 12, "ar": [12, 23, 32], "add": [12, 28, 30, 32], "ani": [12, 25, 26, 29, 30, 32], "categori": [12, 27], "includ": 12, "pass": [12, 15, 23, 28, 30], "rate": 12, "minimum": [12, 25], "column": [12, 23, 31], "each": [12, 27, 32], "test_typ": [12, 27], "ratio": 12, "divid": 12, "proportion_increas": 12, "much": 12, "increas": 12, "reach": 12, "datafactori": [14, 23], "file_path": 14, "factori": [14, 20, 27], "dataset": [14, 23, 26, 27], "respons": 14, "correct": [14, 32], "extens": 14, "load": [14, 19, 20, 21, 22, 23], "text": [14, 19, 20, 21, 22, 24, 31, 32], "conlldataset": 14, "handl": [14, 19], "conll": [14, 15, 23], "subclass": [14, 15, 24, 25], "_idataset": 14, "load_data": 14, "util": [14, 19, 20, 21, 22, 24, 26, 27, 28, 30], "custom_typ": [14, 15, 19, 20, 21, 22, 24, 26, 27, 28, 30], "sentenc": [14, 26, 28, 30, 32], "jsondataset": 14, "json": 14, "csvdataset": 14, "csv": [14, 15], "baseformatt": 15, "defin": [15, 27], "formatt": 15, "static": [15, 19, 25, 26, 27, 28, 29, 30], "to_csv": 15, "to_conl": 15, "convert": [15, 28, 30, 31, 32], "custom": [15, 20], "represent": [15, 27], "between": 15, "differ": [15, 19, 23, 27], "output": [15, 19, 25, 26, 29, 30, 32], "convers": [15, 28, 30], "appropri": 15, "select": 15, "expect": 15, "argument": [15, 21, 22], "either": [15, 20], "posit": 15, "kwarg": [15, 19, 20, 21, 22], "keyword": [15, 21, 22], "nameerror": 15, "sequenceclassificationoutputformatt": 15, "sequenceclassificationoutput": [15, 19, 20, 21, 22, 32], "repres": [15, 27], "delimit": 15, "charact": 15, "neroutputformatt": 15, "neroutput": [15, 19, 20, 21, 22, 32], "temp_id": 15, "temporari": 15, "group": [15, 21, 22], "entiti": [15, 19, 21, 22, 28, 30, 31], "pretrainedmodelforn": [19, 21, 22], "nlu": 19, "nlupipelin": 19, "sparknlp": 19, "pretrain": [19, 21, 22], "pretrainedpipelin": 19, "lightpipelin": 19, "pyspark": 19, "ml": 19, "pipelinemodel": 19, "overrid": 19, "load_model": [19, 20, 21, 22], "predict": [19, 20, 21, 22, 24, 25, 31, 32], "classmethod": [19, 20, 21, 22, 23, 27], "local": [19, 20], "recogn": [19, 21, 22], "predict_raw": [19, 20, 21, 22], "label": [19, 21, 22, 28, 30, 31], "is_ner_annot": 19, "model_inst": 19, "support": [19, 27, 32], "pretrainedmodelfortextclassif": [19, 21, 22], "return_all_scor": [19, 21, 22], "score": [19, 21, 25], "classif": [19, 21, 22, 32], "is_classifi": 19, "classifi": [19, 21], "modelfactori": [20, 23, 24, 25, 27], "instanti": 20, "disk": 20, "spaci": 21, "pipelin": [21, 22], "addit": [21, 22], "group_ent": [21, 22], "form": [21, 32], "huggingfac": 22, "evalu": [23, 24], "testcas": [23, 24], "when": [23, 28, 30], "store": [23, 32], "_testcas": 23, "generated_result": 23, "pd": [23, 24], "overal": 23, "everi": 23, "textcas": 23, "labelwis": 23, "metric": 23, "augment": [23, 28, 30], "locat": 23, "whether": [23, 32], "directli": 23, "call": [23, 32], "valueerror": 23, "pass_rat": 23, "minimum_pass_r": 23, "have": [23, 28, 30], "unexpect": 23, "note": 23, "exampl": 23, "train": 23, "augmented_train": 23, "after": [23, 27], "save_dir": 23, "reus": 23, "later": 23, "folder": 23, "save_testcas": 23, "path_to_fil": 23, "pickl": 23, "modelhandl": [23, 24, 27], "previous": 23, "need": [23, 26, 28, 32], "which": 23, "requir": 23, "previou": 23, "along": 23, "load_testcas": [23, 24], "model_handl": 24, "tupl": [24, 32], "robustnesstestrunn": 24, "robust": [24, 27], "both": [24, 28, 30], "origin": [24, 28, 30, 32], "pertub": 24, "one": [24, 28, 30, 32], "baseaccuraci": 25, "measur": [25, 26, 29, 30], "alias_nam": [25, 26, 27, 29, 30], "identifi": [25, 26, 29, 30], "y_true": 25, "y_pred": 25, "evalut": 25, "minprecisionscor": 25, "precis": 25, "min_precision_scor": 25, "param": 25, "comput": 25, "f1": 25, "minrecallscor": 25, "recal": 25, "minf1scor": 25, "minmicrof1scor": 25, "minmacrof1scor": 25, "minweightedf1scor": 25, "weight": 25, "basebia": 26, "genderpronounbia": [26, 28], "sample_list": [26, 28, 30], "pronouns_to_substitut": [26, 28], "pronoun_typ": [26, 28], "replac": [26, 28], "pronoun": [26, 28], "gender": [26, 28], "substitut": [26, 28, 31], "male": [26, 28], "femal": [26, 28], "neutral": [26, 28], "countryeconomicbia": 26, "country_names_to_substitut": 26, "chosen_country_nam": 26, "countri": 26, "ethnic": 26, "ethnicitynamebia": 26, "names_to_substitut": 26, "chosen_ethnicity_nam": 26, "curat": 26, "unit": 26, "state": 26, "censu": 26, "bureau": 26, "survei": 26, "religionbia": 26, "chosen_nam": 26, "religion": 26, "testfactori": 27, "test_categori": 27, "map": 27, "correspond": [27, 28, 30, 31, 32], "test_scenario": 27, "avail": 27, "scenario": 27, "test_catgori": 27, "itest": 27, "available_test": 27, "robustnesstestfactori": 27, "data_handl": 27, "supported_test": 27, "_data_handl": 27, "kei": 27, "biastestfactori": 27, "bia": [27, 28], "representationtestfactori": 27, "accuracytestfactori": 27, "accuraci": [27, 32], "baseperturb": 28, "helper": [28, 31, 32], "provid": [28, 30], "standard": 28, "wai": [28, 32], "abc": 28, "uppercas": [28, 30], "lowercas": [28, 30], "titlecas": [28, 30], "addpunctu": [28, 30], "whitelist": [28, 30], "punctuat": [28, 30], "end": [28, 30], "skip": [28, 30], "strippunctu": [28, 30], "isn": [28, 30], "t": [28, 30, 32], "strip": [28, 30], "addtypo": [28, 30], "typo": [28, 30], "keyboard": [28, 30], "swap": [28, 30], "introduc": [28, 30], "swapent": [28, 30], "terminologi": [28, 30, 31], "extract": [28, 30], "process": [28, 30], "make": [28, 30], "chang": [28, 30], "accord": [28, 30], "word": [28, 30, 31], "get_cohyponyms_wordnet": [28, 30], "retriev": [28, 30], "co": [28, 30], "hyponym": [28, 30], "wordnet": [28, 30], "hit": [28, 30], "cohyponym": [28, 30], "exist": [28, 30], "swapcohyponym": [28, 30], "tag": [28, 30], "convertacc": [28, 30], "accent_map": [28, 30], "term": [28, 30], "accent": [28, 30], "addcontext": [28, 30], "starting_context": [28, 30], "ending_context": [28, 30], "strategi": [28, 30], "adjust": [28, 30], "where": [28, 30], "context": [28, 30], "token": [28, 30], "ad": [28, 30], "combin": [28, 30], "beg": [28, 30], "randomli": [28, 30], "addcontract": [28, 30], "baserepresent": 29, "genderreprest": 29, "baserobust": 30, "get_substitution_nam": 31, "values_list": 31, "create_terminologi": 31, "ner_data": 31, "iter": 31, "over": 31, "iob": 31, "format": 31, "io": 31, "ha": 31, "to_str_list": 32, "ouput": 32, "accuracyoutput": 32, "them": 32, "specif": 32, "here": 32, "agnost": 32, "onli": 32, "access": 32, "is_pass": 32, "assess": 32, "expected_result": 32, "actual_result": 32, "same": 32, "regardless": 32, "downstream": 32, "xxxoutput": 32, "__eq__": 32, "variabl": 32, "to_dict": 32, "version": 32, "sort_transform": 32, "v": 32, "valid": 32, "ensur": 32, "order": 32, "get_aligned_span_pair": 32, "nerpredict": 32, "align": 32, "span": 32, "achiev": 32, "couldn": 32, "other": 32}, "objects": {"": [[17, 0, 0, "-", "nlptest"]], "nlptest": [[13, 0, 0, "-", "augmentation"], [16, 0, 0, "-", "datahandler"], [18, 0, 0, "-", "modelhandler"], [23, 0, 0, "-", "nlptest"], [24, 0, 0, "-", "testrunner"], [27, 0, 0, "-", "transform"], [33, 0, 0, "-", "utils"]], "nlptest.augmentation": [[12, 0, 0, "-", "fix_robustness"]], "nlptest.augmentation.fix_robustness": [[12, 1, 1, "", "AugmentRobustness"], [12, 1, 1, "", "BaseAugmentaion"]], "nlptest.augmentation.fix_robustness.AugmentRobustness": [[12, 2, 1, "", "fix"], [12, 2, 1, "", "suggestions"]], "nlptest.augmentation.fix_robustness.BaseAugmentaion": [[12, 2, 1, "", "fix"]], "nlptest.datahandler": [[14, 0, 0, "-", "datasource"], [15, 0, 0, "-", "format"]], "nlptest.datahandler.datasource": [[14, 1, 1, "", "CSVDataset"], [14, 1, 1, "", "ConllDataset"], [14, 1, 1, "", "DataFactory"], [14, 1, 1, "", "JSONDataset"]], "nlptest.datahandler.datasource.CSVDataset": [[14, 2, 1, "", "load_data"]], "nlptest.datahandler.datasource.ConllDataset": [[14, 2, 1, "", "load_data"]], "nlptest.datahandler.datasource.DataFactory": [[14, 2, 1, "", "load"]], "nlptest.datahandler.datasource.JSONDataset": [[14, 2, 1, "", "load_data"]], "nlptest.datahandler.format": [[15, 1, 1, "", "BaseFormatter"], [15, 1, 1, "", "Formatter"], [15, 1, 1, "", "NEROutputFormatter"], [15, 1, 1, "", "SequenceClassificationOutputFormatter"]], "nlptest.datahandler.format.BaseFormatter": [[15, 2, 1, "", "to_conll"], [15, 2, 1, "", "to_csv"]], "nlptest.datahandler.format.NEROutputFormatter": [[15, 2, 1, "", "to_conll"], [15, 2, 1, "", "to_csv"]], "nlptest.datahandler.format.SequenceClassificationOutputFormatter": [[15, 2, 1, "", "to_csv"]], "nlptest.modelhandler": [[19, 0, 0, "-", "jsl_modelhandler"], [20, 0, 0, "-", "modelhandler"], [21, 0, 0, "-", "spacy_modelhandler"], [22, 0, 0, "-", "transformers_modelhandler"]], "nlptest.modelhandler.jsl_modelhandler": [[19, 1, 1, "", "PretrainedModelForNER"], [19, 1, 1, "", "PretrainedModelForTextClassification"]], "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForNER": [[19, 2, 1, "", "is_ner_annotator"], [19, 2, 1, "", "load_model"], [19, 2, 1, "", "predict"], [19, 2, 1, "", "predict_raw"]], "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForTextClassification": [[19, 2, 1, "", "is_classifier"], [19, 2, 1, "", "load_model"], [19, 2, 1, "", "predict"]], "nlptest.modelhandler.modelhandler": [[20, 1, 1, "", "ModelFactory"]], "nlptest.modelhandler.modelhandler.ModelFactory": [[20, 2, 1, "", "load_model"], [20, 2, 1, "", "predict"], [20, 2, 1, "", "predict_raw"]], "nlptest.modelhandler.spacy_modelhandler": [[21, 1, 1, "", "PretrainedModelForNER"], [21, 1, 1, "", "PretrainedModelForTextClassification"]], "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForNER": [[21, 2, 1, "", "load_model"], [21, 2, 1, "", "predict"], [21, 2, 1, "", "predict_raw"]], "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForTextClassification": [[21, 2, 1, "", "load_model"], [21, 2, 1, "", "predict"], [21, 2, 1, "", "predict_raw"]], "nlptest.modelhandler.transformers_modelhandler": [[22, 1, 1, "", "PretrainedModelForNER"], [22, 1, 1, "", "PretrainedModelForTextClassification"]], "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForNER": [[22, 2, 1, "", "load_model"], [22, 2, 1, "", "predict"], [22, 2, 1, "", "predict_raw"]], "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForTextClassification": [[22, 2, 1, "", "load_model"], [22, 2, 1, "", "predict"], [22, 2, 1, "", "predict_raw"]], "nlptest.nlptest": [[23, 1, 1, "", "Harness"]], "nlptest.nlptest.Harness": [[23, 2, 1, "", "augment"], [23, 2, 1, "", "configure"], [23, 2, 1, "", "generate"], [23, 2, 1, "", "generated_results"], [23, 2, 1, "", "load"], [23, 2, 1, "", "load_testcases"], [23, 2, 1, "", "report"], [23, 2, 1, "", "run"], [23, 2, 1, "", "save"], [23, 2, 1, "", "save_testcases"], [23, 2, 1, "", "testcases"]], "nlptest.testrunner": [[24, 1, 1, "", "RobustnessTestRunner"], [24, 1, 1, "", "TestRunner"]], "nlptest.testrunner.RobustnessTestRunner": [[24, 2, 1, "", "evaluate"]], "nlptest.testrunner.TestRunner": [[24, 2, 1, "", "evaluate"]], "nlptest.transform": [[27, 1, 1, "", "AccuracyTestFactory"], [27, 1, 1, "", "BiasTestFactory"], [27, 1, 1, "", "ITests"], [27, 1, 1, "", "RepresentationTestFactory"], [27, 1, 1, "", "RobustnessTestFactory"], [27, 1, 1, "", "TestFactory"], [25, 0, 0, "-", "accuracy"], [26, 0, 0, "-", "bias"], [28, 0, 0, "-", "perturbation"], [29, 0, 0, "-", "representation"], [30, 0, 0, "-", "robustness"], [31, 0, 0, "-", "utils"]], "nlptest.transform.AccuracyTestFactory": [[27, 3, 1, "", "alias_name"], [27, 2, 1, "", "available_tests"], [27, 2, 1, "", "transform"]], "nlptest.transform.BiasTestFactory": [[27, 3, 1, "", "alias_name"], [27, 2, 1, "", "available_tests"], [27, 2, 1, "", "transform"]], "nlptest.transform.ITests": [[27, 2, 1, "", "available_tests"], [27, 2, 1, "", "transform"]], "nlptest.transform.RepresentationTestFactory": [[27, 3, 1, "", "alias_name"], [27, 2, 1, "", "available_tests"], [27, 2, 1, "", "transform"]], "nlptest.transform.RobustnessTestFactory": [[27, 3, 1, "", "alias_name"], [27, 2, 1, "", "available_tests"], [27, 2, 1, "", "transform"]], "nlptest.transform.TestFactory": [[27, 2, 1, "", "test_catgories"], [27, 2, 1, "", "test_scenarios"], [27, 2, 1, "", "transform"]], "nlptest.transform.accuracy": [[25, 1, 1, "", "BaseAccuracy"], [25, 1, 1, "", "MinF1Score"], [25, 1, 1, "", "MinMacroF1Score"], [25, 1, 1, "", "MinMicroF1Score"], [25, 1, 1, "", "MinPrecisionScore"], [25, 1, 1, "", "MinRecallScore"], [25, 1, 1, "", "MinWeightedF1Score"]], "nlptest.transform.accuracy.BaseAccuracy": [[25, 2, 1, "", "transform"]], "nlptest.transform.accuracy.MinF1Score": [[25, 2, 1, "", "transform"]], "nlptest.transform.accuracy.MinMacroF1Score": [[25, 2, 1, "", "transform"]], "nlptest.transform.accuracy.MinMicroF1Score": [[25, 2, 1, "", "transform"]], "nlptest.transform.accuracy.MinPrecisionScore": [[25, 2, 1, "", "transform"]], "nlptest.transform.accuracy.MinRecallScore": [[25, 2, 1, "", "transform"]], "nlptest.transform.accuracy.MinWeightedF1Score": [[25, 2, 1, "", "transform"]], "nlptest.transform.bias": [[26, 1, 1, "", "BaseBias"], [26, 1, 1, "", "CountryEconomicBias"], [26, 1, 1, "", "EthnicityNameBias"], [26, 1, 1, "", "GenderPronounBias"], [26, 1, 1, "", "ReligionBias"]], "nlptest.transform.bias.BaseBias": [[26, 2, 1, "", "transform"]], "nlptest.transform.bias.CountryEconomicBias": [[26, 2, 1, "", "transform"]], "nlptest.transform.bias.EthnicityNameBias": [[26, 2, 1, "", "transform"]], "nlptest.transform.bias.GenderPronounBias": [[26, 2, 1, "", "transform"]], "nlptest.transform.bias.ReligionBias": [[26, 2, 1, "", "transform"]], "nlptest.transform.perturbation": [[28, 1, 1, "", "AddContext"], [28, 1, 1, "", "AddContraction"], [28, 1, 1, "", "AddPunctuation"], [28, 1, 1, "", "AddTypo"], [28, 1, 1, "", "BasePerturbation"], [28, 1, 1, "", "ConvertAccent"], [28, 1, 1, "", "GenderPronounBias"], [28, 1, 1, "", "LowerCase"], [28, 1, 1, "", "StripPunctuation"], [28, 1, 1, "", "SwapCohyponyms"], [28, 1, 1, "", "SwapEntities"], [28, 1, 1, "", "TitleCase"], [28, 1, 1, "", "UpperCase"], [28, 4, 1, "", "get_cohyponyms_wordnet"]], "nlptest.transform.perturbation.AddContext": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.AddContraction": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.AddPunctuation": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.AddTypo": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.ConvertAccent": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.GenderPronounBias": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.LowerCase": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.StripPunctuation": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.SwapCohyponyms": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.SwapEntities": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.TitleCase": [[28, 2, 1, "", "transform"]], "nlptest.transform.perturbation.UpperCase": [[28, 2, 1, "", "transform"]], "nlptest.transform.representation": [[29, 1, 1, "", "BaseRepresentation"], [29, 1, 1, "", "GenderReprestation"]], "nlptest.transform.representation.BaseRepresentation": [[29, 2, 1, "", "transform"]], "nlptest.transform.representation.GenderReprestation": [[29, 2, 1, "", "transform"]], "nlptest.transform.robustness": [[30, 1, 1, "", "AddContext"], [30, 1, 1, "", "AddContraction"], [30, 1, 1, "", "AddPunctuation"], [30, 1, 1, "", "AddTypo"], [30, 1, 1, "", "BaseRobustness"], [30, 1, 1, "", "ConvertAccent"], [30, 1, 1, "", "LowerCase"], [30, 1, 1, "", "StripPunctuation"], [30, 1, 1, "", "SwapCohyponyms"], [30, 1, 1, "", "SwapEntities"], [30, 1, 1, "", "TitleCase"], [30, 1, 1, "", "UpperCase"], [30, 4, 1, "", "get_cohyponyms_wordnet"]], "nlptest.transform.robustness.AddContext": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.AddContraction": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.AddPunctuation": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.AddTypo": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.BaseRobustness": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.ConvertAccent": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.LowerCase": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.StripPunctuation": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.SwapCohyponyms": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.SwapEntities": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.TitleCase": [[30, 2, 1, "", "transform"]], "nlptest.transform.robustness.UpperCase": [[30, 2, 1, "", "transform"]], "nlptest.transform.utils": [[31, 4, 1, "", "create_terminology"], [31, 4, 1, "", "get_substitution_names"]], "nlptest.utils": [[32, 0, 0, "-", "custom_types"], [34, 0, 0, "-", "lib_manager"]], "nlptest.utils.custom_types": [[32, 1, 1, "", "AccuracyOutput"], [32, 1, 1, "", "NEROutput"], [32, 1, 1, "", "Sample"], [32, 1, 1, "", "SequenceClassificationOutput"]], "nlptest.utils.custom_types.NEROutput": [[32, 2, 1, "", "to_str_list"]], "nlptest.utils.custom_types.Sample": [[32, 2, 1, "", "get_aligned_span_pairs"], [32, 2, 1, "", "sort_transformations"], [32, 2, 1, "", "to_dict"]], "nlptest.utils.custom_types.SequenceClassificationOutput": [[32, 2, 1, "", "to_str_list"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 11, "nlptest": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "": [], "document": [], "indic": [], "tabl": [], "get": [], "start": 10, "nlp": [10, 11], "test": [10, 11], "cheat": [], "sheet": [], "instal": 10, "us": [], "conda": [], "virtualenv": [], "content": [11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "quick": 10, "doc": 11, "page": 11, "user": 36, "guid": 36, "api": [1, 35], "refer": [1, 35], "modul": [12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35], "augment": [12, 13], "fix_robust": 12, "class": [12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "datahandl": [14, 15, 16], "datasourc": 14, "format": 15, "modelhandl": [18, 19, 20, 21, 22], "jsl_modelhandl": 19, "spacy_modelhandl": 21, "transformers_modelhandl": 22, "testrunn": 24, "transform": [25, 26, 27, 28, 29, 30, 31], "accuraci": 25, "bia": 26, "packag": 27, "method": 27, "paramet": 27, "return": 27, "attribut": 27, "perturb": 28, "function": [28, 30, 31], "represent": 29, "robust": 30, "util": [31, 32, 33, 34], "custom_typ": 32, "lib_manag": 34}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Reference": [[1, "api-reference"], [35, "api-reference"]], "Quick Start": [[10, "quick-start"]], "NLP Test Quick Start": [[10, "nlp-test-quick-start"]], "Installation": [[10, "installation"]], "Welcome to the docs page for NLP Test!": [[11, "welcome-to-the-docs-page-for-nlp-test"]], "Content": [[11, "content"]], "nlptest.augmentation.fix_robustness": [[12, "module-nlptest.augmentation.fix_robustness"]], "Module Contents": [[12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"]], "Classes": [[12, "classes"], [14, "classes"], [15, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [32, "classes"]], "nlptest.augmentation": [[13, "module-nlptest.augmentation"]], "nlptest.datahandler.datasource": [[14, "module-nlptest.datahandler.datasource"]], "nlptest.datahandler.format": [[15, "module-nlptest.datahandler.format"]], "nlptest.datahandler": [[16, "module-nlptest.datahandler"]], "nlptest": [[17, "module-nlptest"]], "nlptest.modelhandler": [[18, "module-nlptest.modelhandler"]], "nlptest.modelhandler.jsl_modelhandler": [[19, "module-nlptest.modelhandler.jsl_modelhandler"]], "nlptest.modelhandler.modelhandler": [[20, "module-nlptest.modelhandler.modelhandler"]], "nlptest.modelhandler.spacy_modelhandler": [[21, "module-nlptest.modelhandler.spacy_modelhandler"]], "nlptest.modelhandler.transformers_modelhandler": [[22, "module-nlptest.modelhandler.transformers_modelhandler"]], "nlptest.nlptest": [[23, "module-nlptest.nlptest"]], "nlptest.testrunner": [[24, "module-nlptest.testrunner"]], "nlptest.transform.accuracy": [[25, "module-nlptest.transform.accuracy"]], "nlptest.transform.bias": [[26, "module-nlptest.transform.bias"]], "nlptest.transform": [[27, "module-nlptest.transform"]], "Package Contents": [[27, "package-contents"]], "Methods": [[27, "methods"], [27, "id3"], [27, "id6"], [27, "id7"], [27, "id9"], [27, "id11"], [27, "id13"], [27, "id15"], [27, "id17"], [27, "id19"]], "Parameters": [[27, "parameters"]], "Returns": [[27, "returns"], [27, "id1"], [27, "id2"], [27, "id4"], [27, "id5"], [27, "id8"], [27, "id12"], [27, "id16"], [27, "id20"]], "Attributes": [[27, "attributes"], [27, "id10"], [27, "id14"], [27, "id18"]], "nlptest.transform.perturbation": [[28, "module-nlptest.transform.perturbation"]], "Functions": [[28, "functions"], [30, "functions"], [31, "functions"]], "nlptest.transform.representation": [[29, "module-nlptest.transform.representation"]], "nlptest.transform.robustness": [[30, "module-nlptest.transform.robustness"]], "nlptest.transform.utils": [[31, "module-nlptest.transform.utils"]], "nlptest.utils.custom_types": [[32, "module-nlptest.utils.custom_types"]], "nlptest.utils": [[33, "module-nlptest.utils"]], "nlptest.utils.lib_manager": [[34, "module-nlptest.utils.lib_manager"]], "Modules": [[35, "modules"]], "User Guide": [[36, "user-guide"]]}, "indexentries": {"augmentrobustness (class in nlptest.augmentation.fix_robustness)": [[12, "nlptest.augmentation.fix_robustness.AugmentRobustness"]], "baseaugmentaion (class in nlptest.augmentation.fix_robustness)": [[12, "nlptest.augmentation.fix_robustness.BaseAugmentaion"]], "fix() (augmentrobustness method)": [[12, "nlptest.augmentation.fix_robustness.AugmentRobustness.fix"]], "fix() (baseaugmentaion method)": [[12, "nlptest.augmentation.fix_robustness.BaseAugmentaion.fix"]], "module": [[12, "module-nlptest.augmentation.fix_robustness"], [13, "module-nlptest.augmentation"], [14, "module-nlptest.datahandler.datasource"], [15, "module-nlptest.datahandler.format"], [16, "module-nlptest.datahandler"], [17, "module-nlptest"], [18, "module-nlptest.modelhandler"], [19, "module-nlptest.modelhandler.jsl_modelhandler"], [20, "module-nlptest.modelhandler.modelhandler"], [21, "module-nlptest.modelhandler.spacy_modelhandler"], [22, "module-nlptest.modelhandler.transformers_modelhandler"], [23, "module-nlptest.nlptest"], [24, "module-nlptest.testrunner"], [25, "module-nlptest.transform.accuracy"], [26, "module-nlptest.transform.bias"], [27, "module-nlptest.transform"], [28, "module-nlptest.transform.perturbation"], [29, "module-nlptest.transform.representation"], [30, "module-nlptest.transform.robustness"], [31, "module-nlptest.transform.utils"], [32, "module-nlptest.utils.custom_types"], [33, "module-nlptest.utils"], [34, "module-nlptest.utils.lib_manager"]], "nlptest.augmentation.fix_robustness": [[12, "module-nlptest.augmentation.fix_robustness"]], "suggestions() (augmentrobustness method)": [[12, "nlptest.augmentation.fix_robustness.AugmentRobustness.suggestions"]], "nlptest.augmentation": [[13, "module-nlptest.augmentation"]], "csvdataset (class in nlptest.datahandler.datasource)": [[14, "nlptest.datahandler.datasource.CSVDataset"]], "conlldataset (class in nlptest.datahandler.datasource)": [[14, "nlptest.datahandler.datasource.ConllDataset"]], "datafactory (class in nlptest.datahandler.datasource)": [[14, "nlptest.datahandler.datasource.DataFactory"]], "jsondataset (class in nlptest.datahandler.datasource)": [[14, "nlptest.datahandler.datasource.JSONDataset"]], "load() (datafactory method)": [[14, "nlptest.datahandler.datasource.DataFactory.load"]], "load_data() (csvdataset method)": [[14, "nlptest.datahandler.datasource.CSVDataset.load_data"]], "load_data() (conlldataset method)": [[14, "nlptest.datahandler.datasource.ConllDataset.load_data"]], "load_data() (jsondataset method)": [[14, "nlptest.datahandler.datasource.JSONDataset.load_data"]], "nlptest.datahandler.datasource": [[14, "module-nlptest.datahandler.datasource"]], "baseformatter (class in nlptest.datahandler.format)": [[15, "nlptest.datahandler.format.BaseFormatter"]], "formatter (class in nlptest.datahandler.format)": [[15, "nlptest.datahandler.format.Formatter"]], "neroutputformatter (class in nlptest.datahandler.format)": [[15, "nlptest.datahandler.format.NEROutputFormatter"]], "sequenceclassificationoutputformatter (class in nlptest.datahandler.format)": [[15, "nlptest.datahandler.format.SequenceClassificationOutputFormatter"]], "nlptest.datahandler.format": [[15, "module-nlptest.datahandler.format"]], "to_conll() (baseformatter static method)": [[15, "nlptest.datahandler.format.BaseFormatter.to_conll"]], "to_conll() (neroutputformatter method)": [[15, "nlptest.datahandler.format.NEROutputFormatter.to_conll"]], "to_csv() (baseformatter static method)": [[15, "nlptest.datahandler.format.BaseFormatter.to_csv"]], "to_csv() (neroutputformatter method)": [[15, "nlptest.datahandler.format.NEROutputFormatter.to_csv"]], "to_csv() (sequenceclassificationoutputformatter method)": [[15, "nlptest.datahandler.format.SequenceClassificationOutputFormatter.to_csv"]], "nlptest.datahandler": [[16, "module-nlptest.datahandler"]], "nlptest": [[17, "module-nlptest"]], "nlptest.modelhandler": [[18, "module-nlptest.modelhandler"]], "pretrainedmodelforner (class in nlptest.modelhandler.jsl_modelhandler)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForNER"]], "pretrainedmodelfortextclassification (class in nlptest.modelhandler.jsl_modelhandler)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForTextClassification"]], "is_classifier() (pretrainedmodelfortextclassification static method)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForTextClassification.is_classifier"]], "is_ner_annotator() (pretrainedmodelforner static method)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForNER.is_ner_annotator"]], "load_model() (pretrainedmodelforner class method)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForNER.load_model"], [21, "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForNER.load_model"], [22, "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForNER.load_model"]], "load_model() (pretrainedmodelfortextclassification method)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForTextClassification.load_model"], [21, "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForTextClassification.load_model"]], "nlptest.modelhandler.jsl_modelhandler": [[19, "module-nlptest.modelhandler.jsl_modelhandler"]], "predict() (pretrainedmodelforner method)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForNER.predict"], [21, "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForNER.predict"], [22, "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForNER.predict"]], "predict() (pretrainedmodelfortextclassification method)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForTextClassification.predict"], [21, "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForTextClassification.predict"], [22, "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForTextClassification.predict"]], "predict_raw() (pretrainedmodelforner method)": [[19, "nlptest.modelhandler.jsl_modelhandler.PretrainedModelForNER.predict_raw"], [21, "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForNER.predict_raw"], [22, "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForNER.predict_raw"]], "modelfactory (class in nlptest.modelhandler.modelhandler)": [[20, "nlptest.modelhandler.modelhandler.ModelFactory"]], "load_model() (modelfactory class method)": [[20, "nlptest.modelhandler.modelhandler.ModelFactory.load_model"]], "nlptest.modelhandler.modelhandler": [[20, "module-nlptest.modelhandler.modelhandler"]], "predict() (modelfactory method)": [[20, "nlptest.modelhandler.modelhandler.ModelFactory.predict"]], "predict_raw() (modelfactory method)": [[20, "nlptest.modelhandler.modelhandler.ModelFactory.predict_raw"]], "pretrainedmodelforner (class in nlptest.modelhandler.spacy_modelhandler)": [[21, "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForNER"]], "pretrainedmodelfortextclassification (class in nlptest.modelhandler.spacy_modelhandler)": [[21, "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForTextClassification"]], "nlptest.modelhandler.spacy_modelhandler": [[21, "module-nlptest.modelhandler.spacy_modelhandler"]], "predict_raw() (pretrainedmodelfortextclassification method)": [[21, "nlptest.modelhandler.spacy_modelhandler.PretrainedModelForTextClassification.predict_raw"], [22, "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForTextClassification.predict_raw"]], "pretrainedmodelforner (class in nlptest.modelhandler.transformers_modelhandler)": [[22, "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForNER"]], "pretrainedmodelfortextclassification (class in nlptest.modelhandler.transformers_modelhandler)": [[22, "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForTextClassification"]], "load_model() (pretrainedmodelfortextclassification class method)": [[22, "nlptest.modelhandler.transformers_modelhandler.PretrainedModelForTextClassification.load_model"]], "nlptest.modelhandler.transformers_modelhandler": [[22, "module-nlptest.modelhandler.transformers_modelhandler"]], "harness (class in nlptest.nlptest)": [[23, "nlptest.nlptest.Harness"]], "augment() (harness method)": [[23, "nlptest.nlptest.Harness.augment"]], "configure() (harness method)": [[23, "nlptest.nlptest.Harness.configure"]], "generate() (harness method)": [[23, "nlptest.nlptest.Harness.generate"]], "generated_results() (harness method)": [[23, "nlptest.nlptest.Harness.generated_results"]], "load() (harness class method)": [[23, "nlptest.nlptest.Harness.load"]], "load_testcases() (harness method)": [[23, "nlptest.nlptest.Harness.load_testcases"]], "nlptest.nlptest": [[23, "module-nlptest.nlptest"]], "report() (harness method)": [[23, "nlptest.nlptest.Harness.report"]], "run() (harness method)": [[23, "nlptest.nlptest.Harness.run"]], "save() (harness method)": [[23, "nlptest.nlptest.Harness.save"]], "save_testcases() (harness method)": [[23, "nlptest.nlptest.Harness.save_testcases"]], "testcases() (harness method)": [[23, "nlptest.nlptest.Harness.testcases"]], "robustnesstestrunner (class in nlptest.testrunner)": [[24, "nlptest.testrunner.RobustnessTestRunner"]], "testrunner (class in nlptest.testrunner)": [[24, "nlptest.testrunner.TestRunner"]], "evaluate() (robustnesstestrunner method)": [[24, "nlptest.testrunner.RobustnessTestRunner.evaluate"]], "evaluate() (testrunner method)": [[24, "nlptest.testrunner.TestRunner.evaluate"]], "nlptest.testrunner": [[24, "module-nlptest.testrunner"]], "baseaccuracy (class in nlptest.transform.accuracy)": [[25, "nlptest.transform.accuracy.BaseAccuracy"]], "minf1score (class in nlptest.transform.accuracy)": [[25, "nlptest.transform.accuracy.MinF1Score"]], "minmacrof1score (class in nlptest.transform.accuracy)": [[25, "nlptest.transform.accuracy.MinMacroF1Score"]], "minmicrof1score (class in nlptest.transform.accuracy)": [[25, "nlptest.transform.accuracy.MinMicroF1Score"]], "minprecisionscore (class in nlptest.transform.accuracy)": [[25, "nlptest.transform.accuracy.MinPrecisionScore"]], "minrecallscore (class in nlptest.transform.accuracy)": [[25, "nlptest.transform.accuracy.MinRecallScore"]], "minweightedf1score (class in nlptest.transform.accuracy)": [[25, "nlptest.transform.accuracy.MinWeightedF1Score"]], "nlptest.transform.accuracy": [[25, "module-nlptest.transform.accuracy"]], "transform() (baseaccuracy static method)": [[25, "nlptest.transform.accuracy.BaseAccuracy.transform"]], "transform() (minf1score static method)": [[25, "nlptest.transform.accuracy.MinF1Score.transform"]], "transform() (minmacrof1score static method)": [[25, "nlptest.transform.accuracy.MinMacroF1Score.transform"]], "transform() (minmicrof1score static method)": [[25, "nlptest.transform.accuracy.MinMicroF1Score.transform"]], "transform() (minprecisionscore static method)": [[25, "nlptest.transform.accuracy.MinPrecisionScore.transform"]], "transform() (minrecallscore static method)": [[25, "nlptest.transform.accuracy.MinRecallScore.transform"]], "transform() (minweightedf1score static method)": [[25, "nlptest.transform.accuracy.MinWeightedF1Score.transform"]], "basebias (class in nlptest.transform.bias)": [[26, "nlptest.transform.bias.BaseBias"]], "countryeconomicbias (class in nlptest.transform.bias)": [[26, "nlptest.transform.bias.CountryEconomicBias"]], "ethnicitynamebias (class in nlptest.transform.bias)": [[26, "nlptest.transform.bias.EthnicityNameBias"]], "genderpronounbias (class in nlptest.transform.bias)": [[26, "nlptest.transform.bias.GenderPronounBias"]], "religionbias (class in nlptest.transform.bias)": [[26, "nlptest.transform.bias.ReligionBias"]], "nlptest.transform.bias": [[26, "module-nlptest.transform.bias"]], "transform() (basebias method)": [[26, "nlptest.transform.bias.BaseBias.transform"]], "transform() (countryeconomicbias static method)": [[26, "nlptest.transform.bias.CountryEconomicBias.transform"]], "transform() (ethnicitynamebias static method)": [[26, "nlptest.transform.bias.EthnicityNameBias.transform"]], "transform() (genderpronounbias static method)": [[26, "nlptest.transform.bias.GenderPronounBias.transform"], [28, "nlptest.transform.perturbation.GenderPronounBias.transform"]], "transform() (religionbias static method)": [[26, "nlptest.transform.bias.ReligionBias.transform"]], "accuracytestfactory (class in nlptest.transform)": [[27, "nlptest.transform.AccuracyTestFactory"]], "biastestfactory (class in nlptest.transform)": [[27, "nlptest.transform.BiasTestFactory"]], "itests (class in nlptest.transform)": [[27, "nlptest.transform.ITests"]], "representationtestfactory (class in nlptest.transform)": [[27, "nlptest.transform.RepresentationTestFactory"]], "robustnesstestfactory (class in nlptest.transform)": [[27, "nlptest.transform.RobustnessTestFactory"]], "testfactory (class in nlptest.transform)": [[27, "nlptest.transform.TestFactory"]], "alias_name (accuracytestfactory attribute)": [[27, "nlptest.transform.AccuracyTestFactory.alias_name"]], "alias_name (biastestfactory attribute)": [[27, "nlptest.transform.BiasTestFactory.alias_name"]], "alias_name (representationtestfactory attribute)": [[27, "nlptest.transform.RepresentationTestFactory.alias_name"]], "alias_name (robustnesstestfactory attribute)": [[27, "nlptest.transform.RobustnessTestFactory.alias_name"]], "available_tests() (accuracytestfactory class method)": [[27, "nlptest.transform.AccuracyTestFactory.available_tests"]], "available_tests() (biastestfactory class method)": [[27, "nlptest.transform.BiasTestFactory.available_tests"]], "available_tests() (itests class method)": [[27, "nlptest.transform.ITests.available_tests"]], "available_tests() (representationtestfactory class method)": [[27, "nlptest.transform.RepresentationTestFactory.available_tests"]], "available_tests() (robustnesstestfactory class method)": [[27, "nlptest.transform.RobustnessTestFactory.available_tests"]], "nlptest.transform": [[27, "module-nlptest.transform"]], "test_catgories() (testfactory class method)": [[27, "nlptest.transform.TestFactory.test_catgories"]], "test_scenarios() (testfactory class method)": [[27, "nlptest.transform.TestFactory.test_scenarios"]], "transform() (accuracytestfactory method)": [[27, "nlptest.transform.AccuracyTestFactory.transform"]], "transform() (biastestfactory method)": [[27, "nlptest.transform.BiasTestFactory.transform"]], "transform() (itests method)": [[27, "nlptest.transform.ITests.transform"]], "transform() (representationtestfactory method)": [[27, "nlptest.transform.RepresentationTestFactory.transform"]], "transform() (robustnesstestfactory method)": [[27, "nlptest.transform.RobustnessTestFactory.transform"]], "transform() (testfactory static method)": [[27, "nlptest.transform.TestFactory.transform"]], "addcontext (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.AddContext"]], "addcontraction (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.AddContraction"]], "addpunctuation (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.AddPunctuation"]], "addtypo (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.AddTypo"]], "baseperturbation (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.BasePerturbation"]], "convertaccent (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.ConvertAccent"]], "genderpronounbias (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.GenderPronounBias"]], "lowercase (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.LowerCase"]], "strippunctuation (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.StripPunctuation"]], "swapcohyponyms (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.SwapCohyponyms"]], "swapentities (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.SwapEntities"]], "titlecase (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.TitleCase"]], "uppercase (class in nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.UpperCase"]], "get_cohyponyms_wordnet() (in module nlptest.transform.perturbation)": [[28, "nlptest.transform.perturbation.get_cohyponyms_wordnet"]], "nlptest.transform.perturbation": [[28, "module-nlptest.transform.perturbation"]], "transform() (addcontext static method)": [[28, "nlptest.transform.perturbation.AddContext.transform"], [30, "nlptest.transform.robustness.AddContext.transform"]], "transform() (addcontraction static method)": [[28, "nlptest.transform.perturbation.AddContraction.transform"], [30, "nlptest.transform.robustness.AddContraction.transform"]], "transform() (addpunctuation static method)": [[28, "nlptest.transform.perturbation.AddPunctuation.transform"], [30, "nlptest.transform.robustness.AddPunctuation.transform"]], "transform() (addtypo static method)": [[28, "nlptest.transform.perturbation.AddTypo.transform"], [30, "nlptest.transform.robustness.AddTypo.transform"]], "transform() (convertaccent static method)": [[28, "nlptest.transform.perturbation.ConvertAccent.transform"], [30, "nlptest.transform.robustness.ConvertAccent.transform"]], "transform() (lowercase static method)": [[28, "nlptest.transform.perturbation.LowerCase.transform"], [30, "nlptest.transform.robustness.LowerCase.transform"]], "transform() (strippunctuation static method)": [[28, "nlptest.transform.perturbation.StripPunctuation.transform"], [30, "nlptest.transform.robustness.StripPunctuation.transform"]], "transform() (swapcohyponyms static method)": [[28, "nlptest.transform.perturbation.SwapCohyponyms.transform"], [30, "nlptest.transform.robustness.SwapCohyponyms.transform"]], "transform() (swapentities static method)": [[28, "nlptest.transform.perturbation.SwapEntities.transform"], [30, "nlptest.transform.robustness.SwapEntities.transform"]], "transform() (titlecase static method)": [[28, "nlptest.transform.perturbation.TitleCase.transform"], [30, "nlptest.transform.robustness.TitleCase.transform"]], "transform() (uppercase static method)": [[28, "nlptest.transform.perturbation.UpperCase.transform"], [30, "nlptest.transform.robustness.UpperCase.transform"]], "baserepresentation (class in nlptest.transform.representation)": [[29, "nlptest.transform.representation.BaseRepresentation"]], "genderreprestation (class in nlptest.transform.representation)": [[29, "nlptest.transform.representation.GenderReprestation"]], "nlptest.transform.representation": [[29, "module-nlptest.transform.representation"]], "transform() (baserepresentation static method)": [[29, "nlptest.transform.representation.BaseRepresentation.transform"]], "transform() (genderreprestation method)": [[29, "nlptest.transform.representation.GenderReprestation.transform"]], "addcontext (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.AddContext"]], "addcontraction (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.AddContraction"]], "addpunctuation (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.AddPunctuation"]], "addtypo (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.AddTypo"]], "baserobustness (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.BaseRobustness"]], "convertaccent (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.ConvertAccent"]], "lowercase (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.LowerCase"]], "strippunctuation (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.StripPunctuation"]], "swapcohyponyms (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.SwapCohyponyms"]], "swapentities (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.SwapEntities"]], "titlecase (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.TitleCase"]], "uppercase (class in nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.UpperCase"]], "get_cohyponyms_wordnet() (in module nlptest.transform.robustness)": [[30, "nlptest.transform.robustness.get_cohyponyms_wordnet"]], "nlptest.transform.robustness": [[30, "module-nlptest.transform.robustness"]], "transform() (baserobustness static method)": [[30, "nlptest.transform.robustness.BaseRobustness.transform"]], "create_terminology() (in module nlptest.transform.utils)": [[31, "nlptest.transform.utils.create_terminology"]], "get_substitution_names() (in module nlptest.transform.utils)": [[31, "nlptest.transform.utils.get_substitution_names"]], "nlptest.transform.utils": [[31, "module-nlptest.transform.utils"]], "accuracyoutput (class in nlptest.utils.custom_types)": [[32, "nlptest.utils.custom_types.AccuracyOutput"]], "neroutput (class in nlptest.utils.custom_types)": [[32, "nlptest.utils.custom_types.NEROutput"]], "sample (class in nlptest.utils.custom_types)": [[32, "nlptest.utils.custom_types.Sample"]], "sequenceclassificationoutput (class in nlptest.utils.custom_types)": [[32, "nlptest.utils.custom_types.SequenceClassificationOutput"]], "get_aligned_span_pairs() (sample method)": [[32, "nlptest.utils.custom_types.Sample.get_aligned_span_pairs"]], "nlptest.utils.custom_types": [[32, "module-nlptest.utils.custom_types"]], "sort_transformations() (sample method)": [[32, "nlptest.utils.custom_types.Sample.sort_transformations"]], "to_dict() (sample method)": [[32, "nlptest.utils.custom_types.Sample.to_dict"]], "to_str_list() (neroutput method)": [[32, "nlptest.utils.custom_types.NEROutput.to_str_list"]], "to_str_list() (sequenceclassificationoutput method)": [[32, "nlptest.utils.custom_types.SequenceClassificationOutput.to_str_list"]], "nlptest.utils": [[33, "module-nlptest.utils"]], "nlptest.utils.lib_manager": [[34, "module-nlptest.utils.lib_manager"]]}})